apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-dep
  namespace: project
spec:
  selector:
    matchLabels:
      app: project
  template:
    metadata:
      labels:
        app: project
    spec:
      containers:
        - name: project-backend
          image: IMAGE_BACKEND_PLACEHOLDER
          envFrom:
            - configMapRef:
                name: postgres-configuration
            - secretRef:
                name: db-key
          env:
            - name: NATS_URL
              value: nats://my-nats:4222
          readinessProbe:
            initialDelaySeconds: 10 # Initial delay until the readiness is tested
            periodSeconds: 5 # How often to test
            httpGet:
              path: /api/healtz
              port: 3001
          livenessProbe:
            initialDelaySeconds: 20 # Initial delay until the readiness is tested
            periodSeconds: 5 # How often to test
            httpGet:
              path: /api/healtz
              port: 3001
          resources:
            limits:
              cpu: "150m"
              memory: "100Mi"
        - name: project-broadcaster
          image: IMAGE_BROADCASTER_PLACEHOLDER
          env:
            - name: NATS_URL
              value: nats://my-nats:4222
            - name: BOT_TOKEN
              value: 1436026802:AAE39QaX20NhudnNmxiPt-UVH9dB3Imxqps
            - name: CHAT_ID
              value: "1402310547"
          resources:
            limits:
              cpu: "150m"
              memory: "100Mi"
        - name: project-frontend
          image: IMAGE_FRONTEND_PLACEHOLDER
          readinessProbe:
            initialDelaySeconds: 10 # Initial delay until the readiness is tested
            periodSeconds: 5 # How often to test
            httpGet:
              path: /
              port: 80
          resources:
            limits:
              cpu: "150m"
              memory: "100Mi"
